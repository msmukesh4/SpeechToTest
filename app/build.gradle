apply plugin: 'com.android.application'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.example.speechtotest"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        /**
         * If you need to insert variables into your AndroidManifest.xml file
         * that are defined in your build.gradle file, you can do so with the manifestPlaceholders property.
         * This property takes a map of key-value pairs
         *
         * If you want to access this variable in AndroidManifest.xml
         * <intent-filter ... >
         *     <data android:scheme="http" android:host="${hostName}" ... />
         *     ...
         * </intent-filter>
         */
//        manifestPlaceholders = [hostName:"www.example.com"]
    }

    signingConfigs {
        release {
            storeFile file("/Users/mukesh/AndroidKeyStore")
            storePassword "password"
            keyAlias "speechtotext-keystore"
            keyPassword "password"
        }
    }

    /**
     * For build variants detail check out this link
     * <a href="https://developer.android.com/studio/build/build-variants">build variants</a>
     *
     * <p>
     * To make use of buildConfigField ::
     * Clean the Project and then
     * Rebuild the project
     * to verify the 'BASE_URL' populated properly goto APIClient and check the 'BuildConfig.java' file
     */
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "String", "BASE_URL", "\"http://a.galactio.com/interview/\""
        }

        debug {
            initWith debug
            buildConfigField "String", "BASE_URL", "\"http://a.galactio.com/interview/\""
            debuggable true
        }

        stage {
            initWith debug
        }
    }

    // Specifies one flavor dimension.
    flavorDimensions "version"
    productFlavors {
        demo {
            // Assigns this product flavor to the "version" flavor dimension.
            // This property is optional if you are using only one dimension.
            dimension "version"
            applicationIdSuffix ".demo"
            versionNameSuffix "-demo"
        }

        full {
            dimension "version"
            applicationIdSuffix ".full"
            versionNameSuffix "-full"
        }
    }
    dataBinding {
        enabled = true
    }
    buildToolsVersion '28.0.3'

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    lintOptions {
        lintConfig file("src/main/res/xml/lint.xml")
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "com.android.support:appcompat-v7:$rootProject.supportLibrary"
    implementation "com.android.support:design:$rootProject.supportLibrary"
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation "com.android.support:recyclerview-v7:$rootProject.supportLibrary"

    // Test Dependencies
    testImplementation 'junit:junit:4.12'
    androidTestImplementation "com.android.support.test:rules:$rootProject.testRulesVersion"
    androidTestImplementation "com.android.support.test:runner:$rootProject.testRulesVersion"

    // Required for instrumented tests
    androidTestImplementation "com.android.support:support-annotations:$rootProject.supportLibrary"
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    // Retrofit2
    implementation "com.squareup.retrofit2:retrofit:$rootProject.retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$rootProject.retrofitVersion"
    implementation 'com.google.code.gson:gson:2.8.2'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.6.0'

    // Room components
    implementation "android.arch.persistence.room:runtime:$rootProject.roomVersion"
    annotationProcessor "android.arch.persistence.room:compiler:$rootProject.roomVersion"
    androidTestImplementation "android.arch.persistence.room:testing:$rootProject.roomVersion"

    // Lifecycle components
    implementation "android.arch.lifecycle:extensions:$rootProject.archLifecycleVersion"
    annotationProcessor "android.arch.lifecycle:compiler:$rootProject.archLifecycleVersion"

    // Dagger
    implementation "com.google.dagger:dagger:$rootProject.daggerVersion"
    annotationProcessor "com.google.dagger:dagger-compiler:$rootProject.daggerVersion"
    implementation "com.google.dagger:dagger-android:$rootProject.daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$rootProject.daggerVersion" // if you use the support libraries
    annotationProcessor "com.google.dagger:dagger-android-processor:$rootProject.daggerVersion"

}
